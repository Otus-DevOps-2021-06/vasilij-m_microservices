---
- name: Check if kubeadm has already run
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

# - name: Print stat of "/etc/kubernetes/pki/ca.key"
#   debug:
#     var: kubeadm_ca

- name: Init cluster if needed
  command: |
    kubeadm init --apiserver-cert-extra-sans="{{ k8s_apiserver_cert_extra_sans }}" \
    --apiserver-advertise-address="{{ k8s_apiserver_advertise_address }}" \
    --control-plane-endpoint="{{ k8s_control_plane_endpoint }}" \
    --pod-network-cidr="{{ k8s_pod_network_cidr }}"
  register: init_cluster
  when: not kubeadm_ca.stat.exists

# - name: Print init kubeadm indo
#   debug:
#     var: init_cluster

- name: Create k8s config directory for regular user
  file:
    path: "/home/{{ k8s_regular_user }}/.kube"
    state: directory
    owner: "{{ k8s_regular_user }}"
    group: "{{ k8s_regular_user }}"
    mode: 0770
  when: init_cluster is succeeded

- name: Setup kubeconfig for regular user
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ k8s_regular_user }}/.kube/config"
    owner: "{{ k8s_regular_user }}"
    group: "{{ k8s_regular_user }}"
    mode: 0660
    remote_src: true
  when: init_cluster is succeeded

- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_cluster
  changed_when: False
  when: init_cluster is succeeded

# - name: Print join command on MASTER
#   debug:
#     var: join_cluster.stdout

- name: Add join command to dummy host
  add_host:
    name: k8s_join_command_holder
    join_command: "{{ join_cluster.stdout }}"
  changed_when: False
